<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="orders">
	<resultMap type="ordersVo" id="oResultMap">
		<result column="orderNo" property="orderNo" />
		<result column="userNo" property="userNo" />
		<result column="orderTime" property="orderTime" />
		<result column="receiverName" property="receiverName" />
		<result column="phone" property="phone" />
		<result column="postCode" property="postCode" />
		<result column="address" property="address" />
		<result column="message" property="message" />
		<result column="grade" property="grade" />
		<result column="orderStat" property="orderStat" />
		<result column="allTotalPrice" property="allTotalPrice" />
		<result column="discountPrice" property="discountPrice" />
		<result column="discountedTotalPrice" property="discountedTotalPrice" />
		<result column="recentUpdateTime" property="recentUpdateTime" />
		<result column="recentUpdateUserNo" property="recentUpdateUserNo" />
		<!-- <result column="orderNoCount" property="orderNoCount" />
		<result column="productStat" property="productStat" />
		<result column="deliveryStat" property="deliveryStat" /> -->
	</resultMap>
	
	<resultMap type="orderProductVo" id="opResultMap">
		<result column="orderNo" property="orderNo"/>
		<result column="productOptionNo" property="productOptionNo"/>
		<result column="buyAmount" property="buyAmount"/>
		<result column="totalPrice" property="totalPrice"/>
		<result column="productStat" property="productStat"/>
		<result column="deliveryStat" property="deliveryStat"/>
		<result column="deliveryDate" property="deliveryDate"/>
		<result column="recentUpdateTime" property="recentUpdateTime"/>
		<result column="recentUpdateUserNo" property="recentUpdateUserNo"/>
	</resultMap>
	
	<resultMap type="paymentVo" id="payResultMap">
		<result column="orderNo" property="orderNo"/>
		<result column="checkoutInfo" property="checkoutInfo"/>
		<result column="depositYN" property="depositYN"/>
		<result column="refundBankName" property="refundBankName"/>
		<result column="refundAccountNo" property="refundAccountNo"/>
	</resultMap>



	<!-- 주문정보 insert 쿼리 -->
	<insert id="insertOrders" parameterType="ordersVo">
		insert into orders
		values(null, #{userNo}, now(), #{receiverName}, #{phone}, #{postCode}, #{address},#{message},#{grade},1,#{allTotalPrice},#{discountPrice},#{discountedTotalPrice},now(), #{userNo})
	</insert>
	
	<!-- 주문의 각 상품정보 insert쿼리 -->
	<insert id="insertOrderProduct" parameterType="orderProductVo">
		insert into orderProduct
		values(#{orderNo}, #{productOptionNo},#{buyAmount},#{totalPrice},1,1,null,now(),#{recentUpdateUserNo})
	</insert>
	
		<!-- 주문의 각 상품정보 insert쿼리 -->
	<insert id="insertPayment" parameterType="paymentVo">
		insert into payment
		values(#{orderNo}, #{checkoutInfo},1,null,null)
	</insert>
	
	
	
	
	<!-- 가장최근에 insert한 유저번호의 주문번호 select -->
	<select id="selectOrderNoByUserNo" parameterType="int" resultType="int">
		select orderNo 
		from orders 
		where userNo=#{userNo}
		order by orderTime desc limit 1
	</select>
	
	<!-- 해당 userNo의 전체주문 조회 -->
	<select id="selectOrdersAll" parameterType="int" resultType="ordersVo">
		select o.orderTime, o.orderNo, op.productOptionNo, po.productOptionName, po.productNo, p.name, op.buyAmount, po.productAmount, op.totalPrice, o.orderStat, p.categoryNo, o.discountedTotalPrice, op.productStat, op.deliveryStat
		from orders o, orderProduct op, productOption po, product p
		where o.userNo = #{userNo} and o.orderNo = op.orderNo and op.productOptionNo = po.productOptionNo and po.productNo = p.productNo
		order by o.orderNo, orderTime desc
	</select>
	
	<!-- userNo의 주문목록을 orderNo로 그룹하여 그룹별 count 조회 -->
	<select id="selectOrderNoGroupCount" parameterType="int" resultType="ordersVo">
	select o.orderNo, count(o.orderNo)as orderNoCount
	from orders o, orderProduct op, productOption po, product p
	where o.userNo = #{userNo} and o.orderNo = op.orderNo and op.productOptionNo = po.productOptionNo and po.productNo = p.productNo
	group by orderNo
	order by o.orderNo, orderTime desc
	</select>
	
		<!-- 해당 seller의 주문받은 전체주문 조회 -->
	<select id="selectSellerOrdersAll" parameterType="int" resultType="ordersVo">
	select o.orderTime, o.orderNo, op.productOptionNo, po.productOptionName, po.productNo, p.name, op.buyAmount, po.productAmount, op.totalPrice, o.orderStat, p.categoryNo, o.discountedTotalPrice, o.userNo, op.productStat, op.deliveryStat, u.name as userName, u.id
	from orders o, orderProduct op, productOption po, product p, users u
	where p.userNo = #{userNo} and o.orderNo = op.orderNo and op.productOptionNo = po.productOptionNo and po.productNo = p.productNo and o.userNo>0 and o.userNo= u.userNo
	order by o.orderNo, orderTime, o.userNo desc
	</select>
	
	<!-- 해당 seller의 주문목록을 orderNo로 그룹하여 그룹별 count 조회 -->
	<select id="selectSellerGroupCount" parameterType="int" resultType="ordersVo">
	select o.orderNo, count(o.orderNo)as orderNoCount
	from orders o, orderProduct op, productOption po, product p
	where p.userNo = #{userNo} and o.orderNo = op.orderNo and op.productOptionNo = po.productOptionNo and po.productNo = p.productNo and o.userNo>0
	group by orderNo
	order by o.orderNo, orderTime, o.userNo desc
	</select>
	
	<!-- orderNo에 속해있는 productOptionNo와 buyAmount, productAmount를 받아옴-->
	<select id="selectByPrdOpNo" parameterType="int" resultType="ordersVo">
	select op.productOptionNo, op.buyAmount, po.productAmount
	from orderProduct op, productOption po
	where op.orderNo=#{orderNo} and op.productOptionNo=po.productOptionNo
	</select>
	
	
	
	
	
	<update id="updateOrderStat" parameterType="ordersVo">
	update orders
	set orderStat = #{orderStat}, recentUpdateTime=now()
	where orderNo = #{orderNo}
	</update>
	
	<update id="udtDeliveryStat" parameterType="ordersVo">
	update orderProduct
	set deliveryStat = #{deliveryStat}, deliveryDate=now()
	where orderNo = #{orderNo} and productOptionNo = #{productOptionNo}
	</update>
	
	
	
	<update id="deleteOrder" parameterType="int">
	update orders
	set userNo = 0, receiverName="삭제", phone="삭제", postCode="삭제",address="삭제", message = "", grade=0 ,orderStat=0 , allTotalPrice="0" , discountPrice="0" , discountedTotalPrice="0" , recentUpdateTime=now()
	where orderNo = #{orderNo}
	</update>
	
	<update id="deleteOrderProduct" parameterType="int">
	update orderProduct
	set recentUpdateTime=now()
	where orderNo = #{orderNo}
	</update>
	
	
	
</mapper>