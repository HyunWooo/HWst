package controller;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import model.domain.users.UsersVo;
import model.service.UsersService;

import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class UsersController {
	 
	
	@Resource(name="uService")
    private UsersService uService;
	
	/* ������ �� ���� ���� ���� : springAjaxMyBatis-servlet.xml  
		<bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView" >
			<property name="contentType" value="text/html;charset=UTF-8" />
		</bean> */
	@RequestMapping("/select.do")
	public ModelAndView select(){
		List<UsersVo> list =  uService.uSelect();
		ModelAndView mv = new ModelAndView();
		mv.addObject("list", list);			
		mv.setViewName("jsonView");	//id=jsonView ��ü�� ã�Ƽ� JsonView����
		return mv;
	}
	
	@RequestMapping("/delete.do")
	@ResponseBody
	public String delete(String studentNo) {
		String result = "no";
		if(uService.uDelete(studentNo) > 0 ) {
			result = "ok";
		}
		return result ;
	}
	
	@RequestMapping("idCheck.do")
	@ResponseBody
	public ResponseEntity<String> usersIdCheck(String id){
		String checkMsg = "��밡��";
		
		UsersVo vo = uService.usersIdCheck(id);
		if(vo != null){
			checkMsg = "�ߺ�";
		}
		HttpHeaders resHeader = new HttpHeaders();
		resHeader.add("Content-Type", "text/html;charset=UTF-8");
		ResponseEntity resultMsg = new ResponseEntity<String>(checkMsg, resHeader, HttpStatus.OK);
		return resultMsg;
	}

	// �α��� ó��
    @RequestMapping(value="loginProcess.do", method = RequestMethod.POST)
    public ModelAndView loginProcess(UsersVo user, HttpSession session, HttpServletRequest request) {
        ModelAndView mav = new ModelAndView();
        UsersVo loginUser = uService.usersLogin(user);
        if (loginUser != null) {
            session.setAttribute("userLoginInfo", loginUser);
            mav.setViewName("redirect:index.do");
        }
        else{
        	session.setAttribute("loginFail", "Y");
        	System.out.println(session.getAttribute("loginFail"));
        	mav.setViewName("redirect:login.do");
        }
        return mav;
        
    }
    
    // �α׾ƿ� ó��
    @RequestMapping(value="logoutProcess.do")
    public ModelAndView logoutProcess(HttpSession session){
    	ModelAndView mav = new ModelAndView();
    	mav.setViewName("redirect:index.do");
    	session.invalidate();
    	return mav;
    }
    
	 // ������ ȸ������ ó��
    @RequestMapping(value="bSignupProcess.do", method = RequestMethod.POST)
    public ModelAndView bSignupProcess(UsersVo user,HttpSession session) {
    	ModelAndView mav = new ModelAndView();
    	mav.setViewName("redirect:bSignup.do");
    	System.out.println(user + " controller User");
    	boolean flag = uService.bSignup(user);
        if (flag != false) {
            session.setAttribute("signupProcess", "Y");
        }else{
        	session.setAttribute("signupProcess", "N");
        }
        return mav;
    }
    
    
    
    
    
    
    
    
    @RequestMapping(value="index.do")
    public String index(){
    	return "index";
    }
    
    @RequestMapping(value="login.do")
    public String login(){
    	return "login";
    }
    
    @RequestMapping(value="chooseSignup.do")
    public String chooseSignup(){
    	return "chooseSignup";
    }
    
    @RequestMapping(value="sSignup.do")
    public String sSignup(){
    	return "sSignup";
    }
    
    @RequestMapping(value="bSignup.do")
    public String bSignup(){
    	return "bSignup";
    }
    
}